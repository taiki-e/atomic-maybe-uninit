only_if: $CIRRUS_TAG == '' && ($CIRRUS_PR != '' || $CIRRUS_BRANCH == 'main')
auto_cancellation: $CIRRUS_PR != ''
env:
  CARGO_INCREMENTAL: '0'
  CARGO_NET_RETRY: '10'
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: '1'
  RUST_TEST_THREADS: '1'
  RUSTDOCFLAGS: -D warnings
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: '10'

aarch64_linux_test_task:
  name: test ($TARGET)
  env:
    TARGET: aarch64-unknown-linux-gnu
  arm_container:
    image: rust
  setup_script:
    - set -ex
    - lscpu
    - rustup toolchain add nightly --no-self-update && rustup default nightly
    - apt-get -o Acquire::Retries=10 -qq update && apt-get -o Acquire::Retries=10 -o Dpkg::Use-Pty=0 install -y --no-install-recommends moreutils
  test_script:
    - set -ex
    - ./tools/test.sh -vv
    # We test doctest only once with the default build conditions because doctest is slow. Both api-test
    # and src/tests have extended copies of doctest, so this will not reduce test coverage.
    # +lse,+rcpc
    # Neoverse N1 is ARMv8.2-a but supports ARMv8.3-a LDAPR instructions.
    # Neoverse N1 is ARMv8.2-a and doesn't support FEAT_LSE2.
    # FEAT_LSE2 is tested on aarch64 macOS VM.
    - RUSTFLAGS="$RUSTFLAGS -C target-feature=+lse,+rcpc" RUSTDOCFLAGS="$RUSTDOCFLAGS -C target-feature=+lse,+rcpc" ./tools/test.sh -vv --tests

aarch64_macos_test_task:
  name: test ($TARGET)
  env:
    TARGET: aarch64-apple-darwin
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-xcode
  setup_script:
    - set -ex
    - sysctl hw.optional machdep.cpu
    - brew install moreutils
    - curl --proto '=https' --tlsv1.2 -fsSL --retry 10 --retry-connrefused https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain nightly
  test_script:
    - . $HOME/.cargo/env
    - set -ex
    # macOS is +lse,+lse2 by default
    # Cirrus CI's aarch64 macOS VM is fast enough, so run ignored tests too.
    - ./tools/test.sh -vv -- --include-ignored

aarch64_linux_valgrind_task:
  name: valgrind ($TARGET)
  env:
    TARGET: aarch64-unknown-linux-gnu
  arm_container:
    image: rust
  setup_script:
    - set -ex
    - rustup toolchain add nightly --no-self-update && rustup default nightly
    - apt-get -o Acquire::Retries=10 -qq update && apt-get -o Acquire::Retries=10 -o Dpkg::Use-Pty=0 install -y --no-install-recommends moreutils valgrind
  test_script:
    - set -ex
    - ./tools/test.sh valgrind -vv
    # We test doctest only once with the default build conditions because doctest is slow. Both api-test
    # and src/tests have extended copies of doctest, so this will not reduce test coverage.
    # +lse
    # As of Valgrind 3.19, Valgrind supports atomic instructions of ARMv8.0 and ARMv8.1 (FEAT_LSE).
    - RUSTFLAGS="$RUSTFLAGS -C target-feature=+lse" RUSTDOCFLAGS="$RUSTDOCFLAGS -C target-feature=+lse" ./tools/test.sh valgrind -vv --tests
