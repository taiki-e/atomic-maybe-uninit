[package]
name = "atomic-maybe-uninit"
version = "0.2.20"
edition = "2021"
rust-version = "1.59"
license = "Apache-2.0 OR MIT"
repository = "https://github.com/taiki-e/atomic-maybe-uninit"
keywords = ["atomic"]
categories = ["concurrency", "embedded", "hardware-support", "no-std", "no-std::no-alloc"]
exclude = ["/.*", "/tools", "/target-specs"]
description = """
Atomic operations on potentially uninitialized integers.
"""

[package.metadata.docs.rs]
targets = [
    "aarch64-unknown-linux-gnu",
    "armv7-unknown-linux-gnueabihf",
    "i686-unknown-linux-gnu",
    "riscv64gc-unknown-linux-gnu",
    "x86_64-unknown-linux-gnu",
]

[workspace]
resolver = "2"

[lib]
doc-scrape-examples = false

[dev-dependencies]
build-context = "0.1"
crossbeam-utils = "0.8"
fastrand = "2"
paste = "1"
quickcheck = { default-features = false, git = "https://github.com/taiki-e/quickcheck.git", branch = "dev" } # https://github.com/BurntSushi/quickcheck/pull/304 + https://github.com/BurntSushi/quickcheck/pull/282 + lower MSRV

[target.'cfg(all(target_family = "wasm", not(target_os = "wasi")))'.dev-dependencies]
wasm-bindgen-test = "0.3"

[target.wasm32-unknown-unknown.dev-dependencies]
getrandom = { version = "0.2", features = ["js"] }
